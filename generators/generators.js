import { faker } from '@faker-js/faker';

export const generateClassic = () => ({
  leadId: faker.datatype.uuid(),
  agentId: faker.datatype.uuid(),
  account_id: faker.datatype.uuid(),
  officeId: faker.datatype.uuid(),
  accountTypeId: faker.datatype.uuid(),
  conversionStatusId: faker.datatype.uuid(),
  retentionStatusId: faker.datatype.uuid(),
  virtualGroupID: faker.datatype.uuid(),
  clickId: faker.datatype.uuid(),
  campaignId: faker.datatype.uuid(),
  affiliateId: faker.datatype.uuid(),
  termsAcceptanceStatusId: faker.datatype.uuid(),
  status_id: faker.datatype.number(),
  old_affiliate_id: faker.datatype.uuid(),
  isSuspended: faker.datatype.boolean(),
  isVerified: faker.datatype.boolean(),
  isTest: faker.datatype.boolean(),
  hasDeposited: faker.datatype.boolean(),
  created_in_crm: faker.datatype.boolean(),
  firstName: faker.name.firstName(),
  lastName: faker.name.lastName(),
  email: faker.internet.email(),
  phone: faker.phone.number(),
  phone2: faker.phone.number(),
  cellphone: faker.phone.number(),
  departmentName: faker.commerce.department(),
  conversionStatusTitle: faker.datatype.string(),
  retentionStatusTitle: faker.datatype.string(),
  conversionCategoryTitle: faker.datatype.string(),
  retentionCategoryTitle: faker.datatype.string(),
  agentName: faker.finance.accountName(),
  officeName: faker.commerce.department(),
  languageCode: faker.random.locale(),
  countryType: faker.random.locale(),
  countryCode: faker.address.countryCode(),
  town: faker.address.city(),
  postalCode: faker.address.zipCode(),
  address: faker.address.streetAddress(),
  address2: faker.address.secondaryAddress(),
  birthday: faker.date.past(),
  marker: faker.datatype.string(),
  currencyCode: faker.finance.currencyCode(),
  ip: faker.internet.ip(),
  tracking: faker.datatype.string(),
  subtracking: faker.datatype.string(),
  param: faker.datatype.string(),
  balance: faker.finance.account(),
  balanceUsd: faker.finance.account(),
  totalDepositAmount: faker.finance.account(),
  totalDepositAmountUsd: faker.finance.account(),
  country_code_by_phone: faker.address.countryCode(),
  normalized_phone: faker.phone.number(),
  promotion_code: faker.datatype.string(),
  security_phrase: faker.datatype.string(),
  campaign_name: faker.datatype.string(),
  import_filename: faker.system.fileName(),
  lastTransactionTimestamp: faker.date.past(),
  verifiedChangedTimestamp: faker.date.past(),
  registrationTimestamp: faker.date.past(),
  lastLoginTimestamp: faker.date.past(),
  lastActiveTimestamp: faker.date.past(),
  lastOnlineTimestamp: faker.date.past(),
  lastUpdateTimestamp: faker.date.past(),
  lastTradeTimestamp: faker.date.past(),
  firstDepositTimestamp: faker.date.past(),
  lastDepositTimestamp: faker.date.past(),
  created_at: faker.date.past(),
  updated_at: faker.date.past(),
});

export const generateCustom = () => ({
  custom01: faker.lorem.words(),
  custom02: faker.lorem.words(),
  custom03: faker.lorem.words(),
  custom04: faker.lorem.words(),
  custom05: faker.lorem.words(),
  custom06: faker.lorem.words(),
  custom07: faker.lorem.words(),
  custom08: faker.lorem.words(),
  custom09: faker.lorem.words(),
  custom10: faker.lorem.words(),
  custom11: faker.lorem.words(),
  custom12: faker.lorem.words(),
  custom13: faker.lorem.words(),
  custom14: faker.lorem.words(),
  custom15: faker.lorem.words(),
  custom16: faker.lorem.words(),
  custom17: faker.lorem.words(),
  custom18: faker.lorem.words(),
  custom19: faker.lorem.words(),
  custom20: faker.lorem.words(),
  custom21: faker.lorem.words(),
  custom22: faker.lorem.words(),
  custom23: faker.lorem.words(),
  custom24: faker.lorem.words(),
  custom25: faker.lorem.words(),
  custom26: faker.lorem.words(),
  custom27: faker.lorem.words(),
  custom28: faker.lorem.words(),
  custom29: faker.lorem.words(),
  custom30: faker.lorem.words(),
  custom31: faker.lorem.words(),
  custom32: faker.lorem.words(),
  custom33: faker.lorem.words(),
  custom34: faker.lorem.words(),
  custom35: faker.lorem.words(),
});
